service: cadastro-pacientes

frameworkVersion: "2"

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221

  #region/stage
  stage: dev
  region: us-east-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:GetItem
      Resource: arn:aws:dynamodb:us-east-1:548036946110:table/PACIENTES

functions:
  listarPacientes:
    handler: handler.listarPacientes
    events:
      - http:
          path: pacientes
          method: get
  obterPaciente:
    handler: handler.obterPaciente
    events:
      - http:
          path: pacientes/{pacienteId}
          method: get
  cadastrarPaciente:
    handler: handler.cadastrarPaciente
    events:
      - http:
          path: pacientes
          method: post

resources:
  Resources:
    PacientesTable:
      Type: AWS::DynamoDB::Table

      Properties:
        TableName: PACIENTES

        AttributeDefinitions:
          - AttributeName: paciente_id

            AttributeType: S

        KeySchema:
          - AttributeName: paciente_id

            KeyType: HASH

        ProvisionedThroughput:
          ReadCapacityUnits: 1

          WriteCapacityUnits: 1
# handler: função dentro do arquivo handler.js que será chamada
# events : cria uma requisição http dentro do API Gateway com o método e a URL informada no path. ex.: ../pacientes/
# resources: pra esse exemplo, fará toda a configuração da tabela em si no DynamoDB, com o campo paciente_id
